/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import models.Customer;
import models.DBManager;
import models.Order;
import models.OrderLine;
import models.Product;

/**
 *
 * @author 30237347
 */
public class ViewProducts extends javax.swing.JFrame 
{
    private Customer loggedInCustomer;
    private HashMap<Integer, Product> products;
    private Order currentOrder;
    
    /**
     *
     * @param customer
     */
    public ViewProducts(Customer customer) 
    {
        initComponents();

        loggedInCustomer = customer;
        
        DBManager db = new DBManager();
        products = db.loadProducts();
        
        if(loggedInCustomer.isIsRegistered() == true)
        {
            currentOrder = loggedInCustomer.findLatestOrders();
            loggedInCustomer.addOrder(currentOrder);
        }
        else
        {
            lblQuantity.setVisible(false);
            cmbQuantity.setVisible(false);
            btnViewBasket.setVisible(false);
            btnAdd.setText("Register");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnViewBasket = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCategories = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstProducts = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbQuantity = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        lblQuantity = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setText("Return");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewBasket.setText("View Basket");
        btnViewBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBasketActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Products");

        lstCategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Clothing", "Footwear" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCategoriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCategories);

        jScrollPane2.setViewportView(lstProducts);

        jLabel2.setText("Product");

        jLabel3.setText("Categories");

        cmbQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        btnAdd.setText("Add To Basket");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblQuantity.setText("Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 22, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(82, 82, 82)
                                .addComponent(btnViewBasket))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(150, 150, 150))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblQuantity)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cmbQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnViewBasket)
                    .addComponent(jLabel1))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstCategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCategoriesValueChanged
    
        String categorySelected = lstCategories.getSelectedValue();
        DefaultListModel productList = new DefaultListModel();
        
        for(Map.Entry<Integer, Product> productEntry : products.entrySet())
        {
            Product product = productEntry.getValue();
            
            if(product.getClass().getName().equals("models." + categorySelected))
            {
                productList.addElement(product);
            }
        }
        
        lstProducts.setModel(productList);
    }//GEN-LAST:event_lstCategoriesValueChanged

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        if(loggedInCustomer.isIsRegistered() == true)
        {
            CustomerHome customerHome = new CustomerHome(loggedInCustomer);
            this.dispose();
            customerHome.setVisible(true);
        }
        else
        {
            MainMenu mainMenu = new MainMenu();
            this.dispose();
            mainMenu.setVisible(true);
          
        }
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
       
        if(loggedInCustomer.isIsRegistered() == true)
        {
            if(lstProducts.getSelectedIndex() != -1)
            {
                Object selectedProductObject = (Object)lstProducts.getSelectedValue();
                Product selectedProduct = (Product)selectedProductObject;
                String x = String.valueOf(cmbQuantity.getSelectedItem());
                
                int selectedQuantity = Integer.parseInt(x);

                Optional<OrderLine> orderLineInBasketWithSelectedProduct = currentOrder.findProductInTheBasket(selectedProduct.getProductId());

                if(!orderLineInBasketWithSelectedProduct.isPresent())
                {
                    if(selectedProduct.getStockLevel() < selectedQuantity)
                    {
                        JOptionPane.showMessageDialog(null, "Sorry, Only " + selectedProduct.getStockLevel() + " Available Right Now");
                    }
                    else
                    {
                        OrderLine ol = new OrderLine(currentOrder.generateUniqueOrderLineId(), selectedProduct, selectedQuantity);
                        currentOrder.addOrderLine(ol);

                        JOptionPane.showMessageDialog(null, "Product Added To Basket");
                    }
                }
                else
                {
                    OrderLine actualOrderLineWithSelectedProduct = orderLineInBasketWithSelectedProduct.get();
                    
                    selectedProduct.setStockLevel(selectedProduct.getStockLevel() - actualOrderLineWithSelectedProduct.getQuantity());

                    actualOrderLineWithSelectedProduct.setQuantity(actualOrderLineWithSelectedProduct.getQuantity() + selectedQuantity);

                    if(selectedProduct.getStockLevel() < actualOrderLineWithSelectedProduct.getQuantity())
                    {
                        JOptionPane.showMessageDialog(null, "Sorry, Only " + selectedProduct.getStockLevel() + " Available Right Now");
                        
                        selectedProduct.setStockLevel(selectedProduct.getStockLevel() + actualOrderLineWithSelectedProduct.getQuantity());
                        
                        actualOrderLineWithSelectedProduct.setQuantity(actualOrderLineWithSelectedProduct.getQuantity() - selectedQuantity);
                    }
                    else
                    {
                        actualOrderLineWithSelectedProduct.setLineTotal(actualOrderLineWithSelectedProduct.getLineTotal() + (selectedQuantity * selectedProduct.getPrice()));

                        DBManager db = new DBManager();
                        db.editOrderLine(actualOrderLineWithSelectedProduct);

                        currentOrder.calculateOrderTotal();

                        JOptionPane.showMessageDialog(null, "Product Added To Basket"); 
                    }
                }
        }
            else
            {
                JOptionPane.showMessageDialog(null, "Current Order Contains No Items");
            }
        }
        else
        {
            Registration registration = new Registration();
            this.dispose();
            registration.setVisible(true);
        }
                  
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnViewBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBasketActionPerformed
        
        ViewBasket viewBasket = new ViewBasket(loggedInCustomer);
        this.dispose();
        viewBasket.setVisible(true);
    }//GEN-LAST:event_btnViewBasketActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
 //               new ViewProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewBasket;
    private javax.swing.JComboBox<String> cmbQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JList<String> lstCategories;
    private javax.swing.JList<String> lstProducts;
    // End of variables declaration//GEN-END:variables
}
